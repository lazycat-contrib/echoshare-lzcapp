import{s as n,a as f,I as m,z as g}from"./index.DoEgvpef.js";import{d as v}from"./useAutoPlay.CCLiOSYS.js";const u=()=>{const e=new AudioContext,t=e.createOscillator(),r=t.connect(e.createMediaStreamDestination());t.start();const a=r.stream.getAudioTracks()[0];return Object.assign(a,{enabled:!1})},l=(e={width:640,height:480})=>{const{width:t,height:r}=e,a=Object.assign(document.createElement("canvas"),{width:t,height:r}),c=a.getContext("2d");c.fillStyle="green",c.fillRect(0,0,t,r);const s=a.captureStream().getVideoTracks()[0];return Object.assign(s,{enabled:!1})},S=(e=0)=>e===1?(n.info("Receive Mode","Video Only"),new MediaStream([l()])):e===2?(n.info("Receive Mode","Audio Only"),new MediaStream([u()])):(n.info("Receive Mode","Video + Audio"),new MediaStream([u(),l()])),b=m.global.t;function h(e,t,r=!1,a=2e3){const c=f();function o(){if(!r&&!c.enableAutoRefetch||e.value===null||e.value.srcObject===null)return;const i=e.value.srcObject;i.active||i.active||(g(b("toast.tryRefetch")),n.error("Video stream interrupted","Trying to recapture"),t())}const{clear:s,restart:d}=v(o,a);return{clearAutoReceive:s,restartAutoReceive:d}}export{S as c,h as u};
